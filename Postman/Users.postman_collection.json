{
	"info": {
		"_postman_id": "0210e2f5-94a7-45e5-a04b-9f007ac5e1c0",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25122587"
	},
	"item": [
		{
			"name": "CRUD",
			"item": [
				{
					"name": "Get All Users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/useraccount/get-users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"useraccount",
								"get-users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Jason\",\r\n    \"lastName\": \"Voorhees\",\r\n    \"email\": \"vorhees@flashion.de\",\r\n    \"phoneNumber\": \"+358111111111\",\r\n    \"bio\": \"This is Jason. Nice to meet ya!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/useraccount/update-profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"useraccount",
								"update-profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"d2f1887a-faf2-4e34-8a89-cd05b561e570\",\r\n    \"currentpassword\": \"Pa$$W0rd\",\r\n    \"newpassword\": \"Pa$$W0rd-Pa$$W0rd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/useraccount/change-password",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"useraccount",
								"change-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User {id}",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/useraccount/delete-profile/a08164a9-15f1-4dfc-b396-2c3e64e42d70",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"useraccount",
								"delete-profile",
								"a08164a9-15f1-4dfc-b396-2c3e64e42d70"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Success",
					"item": [
						{
							"name": "Login as Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has properties\", function () {\r",
											"    pm.expect(user).to.have.property('userName');\r",
											"    pm.expect(user).to.have.property('firstName');\r",
											"    pm.expect(user).to.have.property('lastName');\r",
											"    pm.expect(user).to.have.property('bio');\r",
											"    pm.expect(user).to.have.property('company');\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('phoneNumber');\r",
											"    pm.expect(user).to.have.property('avatar');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"\r",
											"if (pm.test(\"Has properties\")) {\r",
											"    pm.globals.set('token', user.token);\r",
											"}\r",
											"\r",
											"pm.test(\"Global token has been set\", function() {\r",
											"    var token = pm.globals.get('token');\r",
											"    pm.expect(token).to.eql(user.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@studio.com\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Dave (Assistant)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has properties\", function () {\r",
											"    pm.expect(user).to.have.property('userName');\r",
											"    pm.expect(user).to.have.property('firstName');\r",
											"    pm.expect(user).to.have.property('lastName');\r",
											"    pm.expect(user).to.have.property('bio');\r",
											"    pm.expect(user).to.have.property('company');\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('phoneNumber');\r",
											"    pm.expect(user).to.have.property('avatar');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"\r",
											"if (pm.test(\"Has properties\")) {\r",
											"    pm.globals.set('token', user.token);\r",
											"}\r",
											"\r",
											"pm.test(\"Global token has been set\", function() {\r",
											"    var token = pm.globals.get('token');\r",
											"    pm.expect(token).to.eql(user.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"dave@studio.com\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Taina (Client)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has properties\", function () {\r",
											"    pm.expect(user).to.have.property('userName');\r",
											"    pm.expect(user).to.have.property('firstName');\r",
											"    pm.expect(user).to.have.property('lastName');\r",
											"    pm.expect(user).to.have.property('bio');\r",
											"    pm.expect(user).to.have.property('company');\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('phoneNumber');\r",
											"    pm.expect(user).to.have.property('avatar');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"\r",
											"if (pm.test(\"Has properties\")) {\r",
											"    pm.globals.set('token', user.token);\r",
											"}\r",
											"\r",
											"pm.test(\"Global token has been set\", function() {\r",
											"    var token = pm.globals.get('token');\r",
											"    pm.expect(token).to.eql(user.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"taina@client.com\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Rick (Client)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has properties\", function () {\r",
											"    pm.expect(user).to.have.property('userName');\r",
											"    pm.expect(user).to.have.property('firstName');\r",
											"    pm.expect(user).to.have.property('lastName');\r",
											"    pm.expect(user).to.have.property('bio');\r",
											"    pm.expect(user).to.have.property('company');\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('phoneNumber');\r",
											"    pm.expect(user).to.have.property('avatar');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"\r",
											"if (pm.test(\"Has properties\")) {\r",
											"    pm.globals.set('token', user.token);\r",
											"}\r",
											"\r",
											"pm.test(\"Global token has been set\", function() {\r",
											"    var token = pm.globals.get('token');\r",
											"    pm.expect(token).to.eql(user.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"ricky@spanish.com\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Jason (Client)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const user = pm.response.json();\r",
											"\r",
											"pm.test(\"Has properties\", function () {\r",
											"    pm.expect(user).to.have.property('userName');\r",
											"    pm.expect(user).to.have.property('firstName');\r",
											"    pm.expect(user).to.have.property('lastName');\r",
											"    pm.expect(user).to.have.property('bio');\r",
											"    pm.expect(user).to.have.property('company');\r",
											"    pm.expect(user).to.have.property('email');\r",
											"    pm.expect(user).to.have.property('phoneNumber');\r",
											"    pm.expect(user).to.have.property('avatar');\r",
											"    pm.expect(user).to.have.property('token');\r",
											"});\r",
											"\r",
											"if (pm.test(\"Has properties\")) {\r",
											"    pm.globals.set('token', user.token);\r",
											"}\r",
											"\r",
											"pm.test(\"Global token has been set\", function() {\r",
											"    var token = pm.globals.get('token');\r",
											"    pm.expect(token).to.eql(user.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"jason@flashion.de\",\r\n    \"password\": \"Pa$$W0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Login as Admin: pwd validation error",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@studio.com\",\r\n    \"password\": \"password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Admin: wrong password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@studio.com\",\r\n    \"password\": \"p4s$sW000RD\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as Admin: wrong email",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@studio.uk\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Register",
			"item": [
				{
					"name": "Success",
					"item": [
						{
							"name": "Register Jason (client)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Jason\",\r\n    \"lastName\": \"Voorhees\",\r\n    \"company\": \"Flashion LTD\",\r\n    \"email\": \"jason@flashion.de\",\r\n    \"phoneNumber\": \"+35889512752\",\r\n    \"password\": \"Pa$$W0rd\",\r\n    \"role\": \"Client\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register-client",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register-client"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Register User: duplicate email",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userName\": \"rob98\",\r\n    \"firstName\": \"Robert\",\r\n    \"lastName\": \"Kingston\",\r\n    \"bio\": \"About me...\",\r\n    \"company\": \"Studio\",\r\n    \"email\": \"admin@studio.com\",\r\n    \"phoneNumber\": \"+35853232752\",\r\n    \"avatar\": \"Avatar comes here...\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User: duplicate username",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userName\": \"admin\",\r\n    \"firstName\": \"Robert\",\r\n    \"lastName\": \"Kingston\",\r\n    \"bio\": \"About me...\",\r\n    \"company\": \"Studio\",\r\n    \"email\": \"rob@studio.com\",\r\n    \"phoneNumber\": \"+35853232752\",\r\n    \"avatar\": \"Avatar comes here...\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User: weak password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userName\": \"rob98\",\r\n    \"firstName\": \"Robert\",\r\n    \"lastName\": \"Kingston\",\r\n    \"bio\": \"About me...\",\r\n    \"company\": \"Studio\",\r\n    \"email\": \"rob@studio.com\",\r\n    \"phoneNumber\": \"+35853232752\",\r\n    \"avatar\": \"Avatar comes here...\",\r\n    \"password\": \"Password\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User: validation error",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userName\": \"$@&$$$\",\r\n    \"firstName\": \"Robert\",\r\n    \"lastName\": \"Kingston\",\r\n    \"bio\": \"About me...\",\r\n    \"company\": \"Studio\",\r\n    \"email\": \"rob@studio.com\",\r\n    \"phoneNumber\": \"+35853232752\",\r\n    \"avatar\": \"Avatar comes here...\",\r\n    \"password\": \"Pa$$w0rd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User: missing fields",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/useraccount/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"useraccount",
										"register"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Get Current User",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/useraccount",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"useraccount"
					]
				}
			},
			"response": []
		}
	]
}